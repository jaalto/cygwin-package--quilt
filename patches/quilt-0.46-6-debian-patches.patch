--- quilt-0.46.orig/debian/patches/return2
+++ quilt-0.46/debian/patches/return2
@@ -0,0 +1,62 @@
+  * Make sure that quilt returns 2 when there is nothing to do so that
+    patchsys-quilt.mk works again. Upstream regression since 0.33.
+    (Closes: #358792).
+
+Upstream status: Submitted 060427
+
+---
+ quilt/push.in             |    2 +-
+ quilt/scripts/patchfns.in |    8 ++++----
+ 2 files changed, 5 insertions(+), 5 deletions(-)
+
+Index: quilt/quilt/push.in
+===================================================================
+--- quilt.orig/quilt/push.in
++++ quilt/quilt/push.in
+@@ -347,7 +347,7 @@
+ 	[ -z "$opt_all" ] && number=1
+ fi
+ 
+-stop_at_patch=$(find_unapplied_patch "$stop_at_patch") || exit 1
++stop_at_patch=$(find_unapplied_patch "$stop_at_patch") || exit $?
+ 
+ [ -n "$opt_quiet" ] && silent=-s
+ [ -z "$opt_verbose" ] && silent_unless_verbose=-s
+Index: quilt/quilt/scripts/patchfns.in
+===================================================================
+--- quilt.orig/quilt/scripts/patchfns.in
++++ quilt/quilt/scripts/patchfns.in
+@@ -459,7 +459,7 @@
+ 	if [ -z "$patch" ]
+ 	then
+ 		printf $"No patches in series\n" >&2
+-		return 1
++		return 2
+ 	fi
+ 
+ 	echo "$patch"
+@@ -558,7 +558,7 @@
+ 	        then
+ 			printf $"Patch %s is currently applied\n" \
+ 				"$(print_patch $patch)" >&2
+-               		return 1
++               		return 2
+ 	        fi
+ 		echo "$patch"
+ 	else
+@@ -568,13 +568,13 @@
+ 		then
+ 			patch_after "$start"
+ 		else
+-			find_first_patch || return 1
++			find_first_patch || return 2
+ 		fi
+ 		if [ $? -ne 0 ]
+ 		then
+ 			printf $"File series fully applied, ends at patch %s\n" \
+ 				"$(print_patch $start)" >&2
+-			return 1
++			return 2
+ 		fi
+ 	fi
+ }
--- quilt-0.46.orig/debian/patches/no-QUILT_LIB-in-quilt
+++ quilt-0.46/debian/patches/no-QUILT_LIB-in-quilt
@@ -0,0 +1,15 @@
+Index: quilt-0.46/bin/quilt.in
+===================================================================
+--- quilt-0.46.orig/bin/quilt.in	2007-04-19 07:07:31.000000000 +0000
++++ quilt-0.46/bin/quilt.in	2007-04-19 07:07:52.000000000 +0000
+@@ -9,8 +9,8 @@
+ export TEXTDOMAIN=quilt
+ export TEXTDOMAINDIR=@LOCALEDIR@
+ 
+-: ${QUILT_DIR=@QUILT_DIR@} ${QUILT_LIB=@QUILT_LIB@}
+-export QUILT_DIR QUILT_LIB
++: ${QUILT_DIR=@QUILT_DIR@}
++export QUILT_DIR
+ 
+ if [ -z "$QUILTRC" ]
+ then
--- quilt-0.46.orig/debian/patches/series
+++ quilt-0.46/debian/patches/series
@@ -0,0 +1,19 @@
+arch_all
+debianize
+fail_on_missing
+return2
+mailname
+testsuite_cleanups
+doc_improvement
+makefile_glitche
+test_broken_patches
+fr.po
+check_SERIES_exists
+patch-wrapper_do_depend_on_proc
+override_mail_sender_in_testsuite
+mail-signature
+no-signature-test
+mail-from-locale
+generic-awk
+create_db_on_snapshot
+unset_posix_strict_conformance_variables
--- quilt-0.46.orig/debian/patches/check_SERIES_exists
+++ quilt-0.46/debian/patches/check_SERIES_exists
@@ -0,0 +1,26 @@
+Displays an error message when the $SERIES file does not exist and when run
+in verbose mode.
+
+Closes: #369908
+
+Status wrt upstream: not submitted.
+
+
+---
+ quilt/scripts/patchfns.in |    3 +++
+ 1 file changed, 3 insertions(+)
+
+Index: quilt/quilt/scripts/patchfns.in
+===================================================================
+--- quilt.orig/quilt/scripts/patchfns.in
++++ quilt/quilt/scripts/patchfns.in
+@@ -327,6 +327,9 @@
+ 		sed -e '/^$/d' -e '/^#/d' -e 's/^[ '$'\t'']*//' \
+ 		    -e 's/[ '$'\t''].*//' $SERIES
+ 	else
++		if [ "$opt_verbose" ]; then
++			echo "series file not found: $SERIES" >&2
++		fi
+ 		return 1
+ 	fi
+ }
--- quilt-0.46.orig/debian/patches/no-signature-test
+++ quilt-0.46/debian/patches/no-signature-test
@@ -0,0 +1,30 @@
+From: Simon Horman <horms@verge.net.au>
+Date: Thu, 19 Apr 2007 17:39:07 +0900
+Subject: Use the new --signature option in mail tests
+
+Make use of the --signature option to specify that there should
+be no .signature file used. Without this .signature will get sucked in
+if present and if this is the case the test will fail as the expected
+output will differ from the actuall output as the latter will contain
+the contents of .signature while the fomer doesn't.
+
+I guess the test could be changed so as not to compare the signature
+portion, but as this seems like a nice enough solution.
+
+---
+ test/mail.test |    2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+Index: quilt/test/mail.test
+===================================================================
+--- quilt.orig/test/mail.test
++++ quilt/test/mail.test
+@@ -62,7 +62,7 @@
+ 	< Aw: [patch] Fwd: Re: [patch 5/7] Fw: Subject of 5.diff
+ 	<
+ 
+-	$ quilt mail --mbox mbox --prefix "test" --subject "This is a test" -m "Message"
++	$ quilt mail --mbox mbox --prefix "test" --subject "This is a test" -m "Message" --signature ""
+ 	$ grep -e '^Subject:' -e '^To:' -e '^Cc:' -e '^-- $' -e '^ ' mbox
+ 	> Subject: [test 0/5] This is a test
+ 	> -- 
--- quilt-0.46.orig/debian/patches/fail_on_missing
+++ quilt-0.46/debian/patches/fail_on_missing
@@ -0,0 +1,44 @@
+  * Make sure that quilt fails when trying to push a non existant patch (ie
+    if there is a typo in the serie file) unless -f is provided.
+    (Closes: #358875).
+
+Upstream status: they asked for some cleanups, which are done. To be submitted.
+
+---
+ quilt/push.in     |    7 +++++++
+ test/missing.test |    4 ++++
+ 2 files changed, 11 insertions(+)
+
+Index: quilt/quilt/push.in
+===================================================================
+--- quilt.orig/quilt/push.in
++++ quilt/quilt/push.in
+@@ -183,6 +183,13 @@
+ 		no_reject_files="-r $tmp"
+ 	fi
+ 
++	if [ ! -e "$patch_file" -a -z "$opt_force" ]
++	then
++		printf $"Patch %s does not exist\n" \
++		       "$(print_patch $patch)" >&2
++		return 1
++	fi
++
+ 	apply_patch $patch "$patch_file"
+ 	status=$?
+ 	trap "" SIGINT
+Index: quilt/test/missing.test
+===================================================================
+--- quilt.orig/test/missing.test
++++ quilt/test/missing.test
+@@ -7,6 +7,10 @@
+ 	< missing2.diff
+ 	
+ 	$ quilt push -qa
++	> Patch patches/missing1.diff does not exist
++	> Applying patch patches/missing1.diff
++	
++	$ quilt push -qaf
+ 	> Applying patch patches/missing1.diff
+ 	> Patch patches/missing1.diff does not exist; applied empty patch
+ 	> Applying patch patches/missing2.diff
--- quilt-0.46.orig/debian/patches/testsuite_cleanups
+++ quilt-0.46/debian/patches/testsuite_cleanups
@@ -0,0 +1,67 @@
+Cleanup a bit the environment handling around the testsuite.
+
+Upstream status: Submitted 060427
+
+---
+ Makefile.in |    9 +--------
+ test/run    |   20 ++++++++++++++++++++
+ 2 files changed, 21 insertions(+), 8 deletions(-)
+
+Index: quilt/test/run
+===================================================================
+--- quilt.orig/test/run
++++ quilt/test/run
+@@ -35,6 +35,26 @@
+ my $lineno;
+ my $width = ($ENV{COLUMNS} || 80) >> 1;
+ 
++# cleanup the environment
++map { 
++  undef $ENV{$_} if defined($ENV{$_}); 
++} qw(QUILT_PATCHES QUILT_PC LANG LC_MESSAGES LC_CTYPE LC_ALL LANGUAGE);
++
++$ENV{'LC_ALL'} = 'C';
++open RC,"test.quiltrc" || die "cannot read RC file: $?\n";
++while (<RC>) {
++    s/#.*$//;
++    if (m/^([^=]*)=(.*)$/) {
++	$ENV{$1}=$2;
++    }
++}
++
++if (defined($ENV{'QUILT_PATCHES_PREFIX'}) && length($ENV{'QUILT_PATCHES_PREFIX'})) {
++    $ENV{'P'}='patches/';
++    $ENV{'_P'}='../patches/';
++}
++
++# Run the tests
+ for (;;) {
+   my $line = <>; $lineno++;
+   if (defined $line) {
+Index: quilt/Makefile.in
+===================================================================
+--- quilt.orig/Makefile.in
++++ quilt/Makefile.in
+@@ -365,10 +365,6 @@
+ 			{ print FILENAME, ":", "quilt/"$$1 }' quilt/*.in; \
+ 	) | sort -u | $(SED) -re 's:^test/(.*)\.test:test/.\1.ok:' > $@
+ 
+-ifneq ($(shell . $(QUILTRC) ;  echo $$QUILT_PATCHES_PREFIX),)
+-CHECK_ENV := P=patches/; _P=../patches/; export P _P
+-endif
+-
+ # Each tests dependencies are stored in test/.depend
+ ifneq ($(findstring check-,$(MAKECMDGOALS)),)
+ test/.%.ok : test/%.test FORCE
+@@ -376,10 +372,7 @@
+ test/.%.ok : test/%.test
+ endif
+ 	@echo "[$(<F)]"
+-	@LANG=C; LC_ALL=C;						\
+-	export LANG LC_ALL;						\
+-	$(CHECK_ENV);							\
+-	cd $(@D);							\
++	@cd $(@D);							\
+ 	./run $(<F)
+ 	@touch $@
+ 
--- quilt-0.46.orig/debian/patches/debianize
+++ quilt-0.46/debian/patches/debianize
@@ -0,0 +1,36 @@
+Change some little glitches to fit better the Debian conventions.
+
+Upstream status: not applicable
+
+---
+ Makefile.in    |    2 +-
+ doc/quilt.1.in |    3 +--
+ 2 files changed, 2 insertions(+), 3 deletions(-)
+
+Index: quilt/Makefile.in
+===================================================================
+--- quilt.orig/Makefile.in
++++ quilt/Makefile.in
+@@ -244,7 +244,7 @@
+ 		-e 's:@VERSION''@:$(VERSION):g'				\
+ 		-e 's:@RELEASE''@:$(RELEASE):g'				\
+ 		-e 's:@LOCALEDIR''@:$(localedir):g'			\
+-		-e 's:@DOCSUBDIR''@:$(docdir)/$(PACKAGE)-$(VERSION):g'	\
++		-e 's:@DOCSUBDIR''@:$(docdir)/$(PACKAGE):g'		\
+ 		$< > $@
+ 	@$(if $(filter-out $<,$(NON_EXEC_IN)),chmod +x $@)
+ 
+Index: quilt/doc/quilt.1.in
+===================================================================
+--- quilt.orig/doc/quilt.1.in
++++ quilt/doc/quilt.1.in
+@@ -212,8 +212,7 @@
+ 
+ .SH SEE ALSO
+ 
+-The pdf documentation, which should be under /usr/share/doc/quilt/quilt.pdf.
+-Note that some distributors compress this file. 
++The pdf documentation, under /usr/share/doc/quilt/quilt.pdf.gz
+ .BR zxpdf ( 1 )
+ can be used to display compressed pdf files.
+ 
--- quilt-0.46.orig/debian/patches/patch-wrapper_do_depend_on_proc
+++ quilt-0.46/debian/patches/patch-wrapper_do_depend_on_proc
@@ -0,0 +1,23 @@
+Let patch-wrapper die with an informative message when /proc is not mounted
+althrough it needs it to pass the patching request to GNU patch since it
+fails to understand all options.
+
+---
+ bin/patch-wrapper.in |    4 ++++
+ 1 file changed, 4 insertions(+)
+
+Index: quilt/bin/patch-wrapper.in
+===================================================================
+--- quilt.orig/bin/patch-wrapper.in
++++ quilt/bin/patch-wrapper.in
+@@ -171,6 +171,10 @@
+     if [ -n "$opt_input" ]
+     then
+ 	patch=$opt_input
++    elif [ ! -e /proc/self ]
++    then
++        echo "patch-wrapper: /proc not mounted!" >&2
++	exit 1
+     elif [ -e /proc/self/fd/0 ]
+     then
+ 	patch=$(readlink /proc/self/fd/0)
--- quilt-0.46.orig/debian/patches/override_mail_sender_in_testsuite
+++ quilt-0.46/debian/patches/override_mail_sender_in_testsuite
@@ -0,0 +1,26 @@
+---
+ test/mail.test |    4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+Index: quilt/test/mail.test
+===================================================================
+--- quilt.orig/test/mail.test
++++ quilt/test/mail.test
+@@ -12,7 +12,7 @@
+ 
+ 	$ cat no-subject > patches/1.diff
+ 	$ ls patches/ > series
+-	$ quilt mail --mbox mbox --prefix "test" --subject "This is a test" -m "Message"
++	$ quilt mail --sender quilt@noreply.org --mbox mbox --prefix "test" --subject "This is a test" -m "Message"
+ 	> Unable to extract a subject header from patches/1.diff
+ 
+ 	$ cat - no-subject > patches/1.diff
+@@ -21,7 +21,7 @@
+ 	< Acked-by: Dummy <dummy@some.where>
+ 	<
+ 
+-	$ quilt mail --mbox mbox --prefix "test" -m "Message"
++	$ quilt mail --sender quilt@noreply.org --mbox mbox --prefix "test" -m "Message"
+ 	> Introduction has no subject header
+ 
+ 	$ cat - no-subject > patches/2.diff
--- quilt-0.46.orig/debian/patches/doc_improvement
+++ quilt-0.46/debian/patches/doc_improvement
@@ -0,0 +1,76 @@
+  * Let the manpage make clearer that literal QUILT_COMMAND_ARGS is
+    not read (Closes: #354997)
+  * Fix several typos (Closes: #386549, #386548, #395447)
+
+Upstream status: not submitted
+
+---
+ bin/guards.in   |    2 +-
+ doc/main.tex    |    2 +-
+ doc/quilt.1.in  |    6 +++---
+ quilt/import.in |    2 +-
+ 4 files changed, 6 insertions(+), 6 deletions(-)
+
+Index: quilt/doc/quilt.1.in
+===================================================================
+--- quilt.orig/doc/quilt.1.in
++++ quilt/doc/quilt.1.in
+@@ -145,8 +145,8 @@
+ 
+ Upon startup, quilt evaluates the file .quiltrc in the user's home
+ directory, or the file specified with the --quiltrc option.  This file
+-is a regular bash script. Default options can be passed to any command
+-by defining a QUILT_COMMAND_ARGS variable.  For example,
++is a regular bash script. Default options can be passed to any COMMAND
++by defining a QUILT_${COMMAND}_ARGS variable.  For example,
+ QUILT_DIFF_ARGS="--color=auto" causes the output of quilt diff to be
+ syntax colored when writing to a terminal.
+ 
+@@ -188,7 +188,7 @@
+ a shortcut to adding --no-index to both QUILT_DIFF_ARGS and
+ QUILT_REFRESH_ARGS.
+ 
+-.IP QUILT_NO_DIFF_TIMESTAMP 4
++.IP QUILT_NO_DIFF_TIMESTAMPS 4
+ 
+ By default, quilt includes timestamps in headers when generating patches.
+ If this variable is set to anything, no timestamp will be included.  This
+Index: quilt/bin/guards.in
+===================================================================
+--- quilt.orig/bin/guards.in
++++ quilt/bin/guards.in
+@@ -263,7 +263,7 @@
+ file system. If files are referenced in the specification that do not exist, or
+ if files are not enlisted in the specification file warnings are printed. The
+ I<--path> option can be used to specify which directory or directories to scan.
+-Multiple directories are eparated by a colon (C<:>) character. The
++Multiple directories are separated by a colon (C<:>) character. The
+ I<--prefix> option specifies the location of the files.
+ 
+ =head1 AUTHOR
+Index: quilt/quilt/import.in
+===================================================================
+--- quilt.orig/quilt/import.in
++++ quilt/quilt/import.in
+@@ -33,7 +33,7 @@
+ 	Patch filename to use inside quilt. This option can only be
+ 	used when importing a single patch.
+ 
+--f	Overwite/update existing patches.
++-f	Overwrite/update existing patches.
+ 
+ -d {o|a|n}
+ 	When overwriting in existing patch, keep the old (o), all (a), or
+Index: quilt/doc/main.tex
+===================================================================
+--- quilt.orig/doc/main.tex
++++ quilt/doc/main.tex
+@@ -576,7 +576,7 @@
+ 	approach will often result in false positives, the latter
+ 	approach may result in false negatives (that is, \quilt{graph}
+ 	may overlook dependencies).
+-} The ouput of this command can be visualized using the tools from AT\&T
++} The output of this command can be visualized using the tools from AT\&T
+ Research's Graph Visualization Project (GraphViz,
+ \url{http://www.graphviz.org/}).  The \quilt{graph} command supports
+ different kinds of graphs.
--- quilt-0.46.orig/debian/patches/makefile_glitche
+++ quilt-0.46/debian/patches/makefile_glitche
@@ -0,0 +1,47 @@
+From: Romain Francoise
+Closes: #436936
+
+Here's a patch for this bug; it's necessary because during the
+Debian build process the top-level makefile is debian/rules and make
+adds -w to MAKEFLAGS for sub-makes, causing the messages to appear
+in the documentation when these targets are run.  During a normal
+build the makefile is not run by a sub-make so this bug isn't
+triggered.
+
+Upstream status: not submitted
+
+---
+ Makefile.in |    6 +++---
+ 1 file changed, 3 insertions(+), 3 deletions(-)
+
+Index: quilt/Makefile.in
+===================================================================
+--- quilt.orig/Makefile.in
++++ quilt/Makefile.in
+@@ -171,7 +171,7 @@
+ 	@while read line; do						\
+ 		case "$$line" in					\
+ 		'@REFERENCE''@')					\
+-			$(MAKE) -s reference				\
++			$(MAKE) -s --no-print-directory reference	\
+ 			;;						\
+ 		*)							\
+ 			echo $$line					\
+@@ -184,7 +184,7 @@
+ 	while read line; do						\
+ 	  case "$$line" in						\
+ 	  '@REFERENCE''@')						\
+-	    $(MAKE) -s reference |					\
++	    $(MAKE) -s --no-print-directory reference |       		\
+ 	    $(SED) -e 's/^quilt \([^ ]*\)\(.*\)/.IP "\\fB\1\\fP\2 " 4/'	\
+ 		   -e $$'s/^  \\(-[^\t]*\\)\t\\?/.IP "    \\1" 8\\\n/'	\
+ 		   -e $$'s/^  \t\\?//'					\
+@@ -193,7 +193,7 @@
+ 	    echo "$$line"						\
+ 	    ;;								\
+ 	  esac;								\
+-	done < $< 2>&1 > $@
++	done < $< > $@
+ 
+ .PHONY :: reference
+ reference : $(QUILT:%=quilt/%) quilt/scripts/patchfns compat
--- quilt-0.46.orig/debian/patches/fr.po
+++ quilt-0.46/debian/patches/fr.po
@@ -0,0 +1,16 @@
+---
+ Makefile.in |    1 +
+ 1 file changed, 1 insertion(+)
+
+Index: quilt/Makefile.in
+===================================================================
+--- quilt.orig/Makefile.in
++++ quilt/Makefile.in
+@@ -135,6 +135,7 @@
+ 	$(MSGFMT) --statistics -o $@ $<
+ 
+ %.po : po/quilt.pot
++	$(MSGUNIQ) -o $@.tmp $@ && mv $@.tmp $@
+ 	$(MSGMERGE) -o $@ $@ $^
+ 
+ scripts : $(BIN:%=bin/%) $(QUILT:%=quilt/%) 				\
--- quilt-0.46.orig/debian/patches/arch_all
+++ quilt-0.46/debian/patches/arch_all
@@ -0,0 +1,1087 @@
+  * Make backup-files a shell script instead of a binary, so we can make
+    quilt arch: all [Steve Langasek, thanks so much]
+    (Closes: #363659)
+    
+Upstream status: Submitted 060427
+
+---
+ Makefile.in                   |   29 --
+ bin/quilt.in                  |    4 
+ lib/backup-files.c            |  585 ------------------------------------------
+ quilt/add.in                  |    2 
+ quilt/pop.in                  |    4 
+ quilt/push.in                 |    2 
+ quilt/remove.in               |    2 
+ quilt/scripts/backup-files.in |  269 +++++++++++++++++++
+ quilt/snapshot.in             |    2 
+ 9 files changed, 283 insertions(+), 616 deletions(-)
+
+Index: quilt/Makefile.in
+===================================================================
+--- quilt.orig/Makefile.in
++++ quilt/Makefile.in
+@@ -6,7 +6,6 @@
+ prefix :=	@prefix@
+ exec_prefix :=	@exec_prefix@
+ bindir :=	@bindir@
+-libdir :=	@libdir@
+ datarootdir :=	@datarootdir@
+ datadir :=	@datadir@
+ docdir :=	@docdir@
+@@ -50,11 +49,6 @@
+ LIBS :=		@LIBS@
+ EXEEXT :=	@EXEEXT@
+ 
+-LIBOBJS :=	$(filter $(patsubst lib/%.c,lib/%.o,$(wildcard lib/*.c)), $(patsubst %,lib/%,@LIBOBJS@))
+-ifneq ($(LIBOBJS),)
+-CFLAGS += -Ilib
+-endif
+-
+ COMPAT_SYMLINKS	:= @COMPAT_SYMLINKS@
+ COMPAT_PROGRAMS	:= @COMPAT_PROGRAMS@
+ 
+@@ -82,7 +76,7 @@
+ DIRT +=		$(QUILT_IN:%=quilt/%)
+ 
+ SCRIPTS_IN :=	patchfns parse-patch inspect dependency-graph edmail	\
+-		remove-trailing-ws
++		remove-trailing-ws backup-files
+ 
+ SCRIPTS_SRC :=	$(SCRIPTS_IN:%=%.in)
+ SCRIPTS :=	$(SCRIPTS_IN)
+@@ -93,9 +87,6 @@
+ SRC +=		$(wildcard compat/*.in) $(wildcard compat/*.sh)
+ DIRT +=		$(patsubst %.in,%,$(wildcard compat/*.in)) $(COMPAT_SYMLINKS:%=compat/%)
+ 
+-LIB_SRC :=	backup-files.c
+-LIB :=		backup-files$(EXEEXT)
+-SRC +=		$(LIB_SRC:%=lib/%)
+ DIRT +=		lib/backup-files$(EXEEXT) $(LIB_SRC:%.c=lib/%.o)
+ 
+ DOC_IN :=	README
+@@ -127,16 +118,13 @@
+ # Settings for running the uninstalled version of quilt in the source tree:
+ PATH :=		$(CURDIR)/bin:$(CURDIR)/compat:$(PATH)
+ QUILT_DIR :=	$(CURDIR)/quilt
+-QUILT_LIB :=	$(CURDIR)/lib
+ QUILTRC :=	$(CURDIR)/test/test.quiltrc
+-export QUILT_DIR QUILT_LIB QUILTRC
++export QUILT_DIR QUILTRC
+ 
+ #-----------------------------------------------------------------------
+ 
+ all : configure scripts compat $(DOC:%=doc/%) $(MAN1) mofiles
+ 
+-$(LIB:%=lib/%) :: $(LIBOBJS)
+-
+ ifeq ($(USE_NLS),yes)
+ mofiles : $(LINGUAS:%=po/%.mo)
+ else
+@@ -150,7 +138,7 @@
+ 	$(MSGMERGE) -o $@ $@ $^
+ 
+ scripts : $(BIN:%=bin/%) $(QUILT:%=quilt/%) 				\
+-	  $(SCRIPTS:%=quilt/scripts/%) $(LIB:%=lib/%)			\
++	  $(SCRIPTS:%=quilt/scripts/%) 					\
+ 	  $(if $(PATCH_WRAPPER),bin/patch-wrapper)
+ 
+ dist : clean $(PACKAGE)-$(VERSION).tar.gz
+@@ -249,8 +237,7 @@
+ $(patsubst %.in,%,$(wildcard bin/*.in quilt/*.in quilt/scripts/*.in)) :: Makefile
+ % :: %.in
+ 	@echo "$< -> $@" >&2
+-	@$(SED) -e 's:@QUILT_LIB''@:$(libdir)/$(PACKAGE):g'		\
+-		-e 's:@QUILT_DIR''@:$(datadir)/$(PACKAGE):g'		\
++	@$(SED) -e 's:@QUILT_DIR''@:$(datadir)/$(PACKAGE):g'		\
+ 		-e 's:@PERL''@:$(PERL):g'				\
+ 		-e 's:@BASH''@:$(BASH):g'				\
+ 		-e 's:@PATCH''@:$(PATCH):g'				\
+@@ -261,7 +248,7 @@
+ 		$< > $@
+ 	@$(if $(filter-out $<,$(NON_EXEC_IN)),chmod +x $@)
+ 
+-lib/backup-files.o :: Makefile
++#lib/backup-files.o :: Makefile
+ 
+ configure : configure.ac aclocal.m4
+ 	autoconf
+@@ -313,9 +300,6 @@
+ 		   $(BUILD_ROOT)$(datadir)/$(PACKAGE)/wrapper/patch
+ endif
+ 	
+-	$(INSTALL) -d $(BUILD_ROOT)$(libdir)/$(PACKAGE)
+-	$(INSTALL) -m 755 $(LIB:%=lib/%) $(BUILD_ROOT)$(libdir)/$(PACKAGE)/
+-
+ 	$(INSTALL) -d $(BUILD_ROOT)$(docdir)/$(PACKAGE)-$(VERSION)/
+ 	$(INSTALL) -m 644 doc/README					\
+ 		   $(BUILD_ROOT)$(docdir)/$(PACKAGE)-$(VERSION)/
+@@ -350,7 +334,6 @@
+ 
+ uninstall ::
+ 	rm -rf $(BIN:%=$(BUILD_ROOT)$(bindir)/%)			\
+-	       $(BUILD_ROOT)$(libdir)/$(PACKAGE)			\
+ 	       $(BUILD_ROOT)$(datadir)/$(PACKAGE)			\
+ 	       $(patsubst %,$(BUILD_ROOT)$(mandir)/man1/%,		\
+ 		   $(notdir $(MAN1)))					\
+@@ -375,7 +358,7 @@
+ 
+ # Include a run-time generated list of dependencies for each test case
+ test/.depend : Makefile $(TESTS)
+-	@(  printf "%s : bin/quilt quilt/scripts/patchfns $(LIB:%=lib/%) $(COMPAT)\n" $(TESTS); \
++	@(  printf "%s : bin/quilt quilt/scripts/patchfns $(COMPAT)\n" $(TESTS); \
+ 	    $(AWK) 'sub(/.*\$$ *quilt /, "")				\
+ 			{ print FILENAME, ":", "quilt/"$$1}' $(TESTS); \
+ 	    $(AWK) 'sub(/.*\<quilt_command /, "") && ($$1 !~ /[^a-z]/)	\
+Index: quilt/quilt/add.in
+===================================================================
+--- quilt.orig/quilt/add.in
++++ quilt/quilt/add.in
+@@ -121,7 +121,7 @@
+ 		continue
+ 	fi
+ 
+-	if ! $QUILT_LIB/backup-files -b -s -L -B $QUILT_PC/$patch/ $SUBDIR$file
++	if ! $QUILT_DIR/scripts/backup-files -b -s -L -B $QUILT_PC/$patch/ $SUBDIR$file
+ 	then
+ 		printf $"Failed to back up file %s\n" "$SUBDIR$file" >&2
+ 		status=1
+Index: quilt/quilt/pop.in
+===================================================================
+--- quilt.orig/quilt/pop.in
++++ quilt/quilt/pop.in
+@@ -168,7 +168,7 @@
+ 			status=$?
+ 		else
+ 			printf $"Removing patch %s\n" "$(print_patch $patch)"
+-			$QUILT_LIB/backup-files $silent -r -t -B $QUILT_PC/$patch/ -
++			$QUILT_DIR/scripts/backup-files $silent -r -t -B $QUILT_PC/$patch/ -
+ 			status=$?
+ 		fi
+ 		remove_from_db $patch
+@@ -270,7 +270,7 @@
+ 	# of one: This will automatically be the case in the usual
+ 	# situations, but we don't want to risk file corruption in weird
+ 	# corner cases such as files added to a patch but not modified.
+-	$QUILT_LIB/backup-files -L -s -B $QUILT_PC/$patch/ -
++	$QUILT_DIR/scripts/backup-files -L -s -B $QUILT_PC/$patch/ -
+ 	printf $"Now at patch %s\n" "$(print_patch $patch)"
+ fi
+ ### Local Variables:
+Index: quilt/quilt/push.in
+===================================================================
+--- quilt.orig/quilt/push.in
++++ quilt/quilt/push.in
+@@ -139,7 +139,7 @@
+ {
+ 	local patch=$1
+ 
+-	$QUILT_LIB/backup-files $silent_unless_verbose -r -B $QUILT_PC/$patch/ -
++	$QUILT_DIR/scripts/backup-files $silent_unless_verbose -r -B $QUILT_PC/$patch/ -
+ }
+ 
+ cleanup_patch_output() {
+Index: quilt/quilt/remove.in
+===================================================================
+--- quilt.orig/quilt/remove.in
++++ quilt/quilt/remove.in
+@@ -86,7 +86,7 @@
+ 	fi
+ 
+ 	# Restore file from backup
+-	if ! $QUILT_LIB/backup-files -r -t -s -B $QUILT_PC/$patch/ $SUBDIR$file
++	if ! $QUILT_DIR/scripts/backup-files -r -t -s -B $QUILT_PC/$patch/ $SUBDIR$file
+ 	then
+ 		printf $"Failed to remove file %s from patch %s\n" \
+ 		       "$SUBDIR$file" "$(print_patch $patch)" >&2
+Index: quilt/quilt/snapshot.in
+===================================================================
+--- quilt.orig/quilt/snapshot.in
++++ quilt/quilt/snapshot.in
+@@ -85,7 +85,7 @@
+ 	}
+ 	{ print }
+ ' \
+-| $QUILT_LIB/backup-files -b -s -L -f - -B "$QUILT_PC/$snap_subdir/"
++| $QUILT_DIR/scripts/backup-files -b -s -L -f - -B "$QUILT_PC/$snap_subdir/"
+ 
+ ### Local Variables:
+ ### mode: shell-script
+Index: quilt/quilt/scripts/backup-files.in
+===================================================================
+--- /dev/null
++++ quilt/quilt/scripts/backup-files.in
+@@ -0,0 +1,269 @@
++#! @BASH@
++
++set -e
++
++# File: backup-files.sh
++
++# Copyright (C) 2006 Steve Langasek <vorlon@debian.org>
++# portions Copyright (C) 2003, 2004, 2005, 2006 Andreas Gruenbacher
++# <agruen@suse.de>, SuSE Labs
++
++# This program is free software; you can redistribute it and/or modify
++# it under the terms of the GNU General Public License as published by
++# the Free Software Foundation; version 2 dated June, 1991.
++
++# This program is distributed in the hope that it will be useful, but 
++# WITHOUT ANY WARRANTY; without even the implied warranty of
++# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
++# General Public License for more details.
++
++# You should have received a copy of the GNU General Public License 
++# along with this program;  if not, write to the Free Software
++# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
++# MA 02110-1301, USA.
++
++
++# Create backup files of a list of files similar to GNU patch. A path
++# name prefix and suffix for the backup file can be specified with the
++# -B and -z options.
++
++usage () {
++	progname="$1"
++	printf "Usage: %s [-B prefix] [-z suffix] [-f {file|-}] [-s] [-b|-r|-x] [-t] [-L] {file|-} ...\n"\
++	"\n"\
++	"\tCreate hard linked backup copies of a list of files\n"\
++	"\tread from standard input.\n"\
++	"\n"\
++	"\t-b\tCreate backup\n"\
++	"\t-r\tRestore the backup\n"\
++	"\t-x\tRemove backup files and empty parent directories\n"\
++	"\t-B\tPath name prefix for backup files\n"\
++	"\t-z\tPath name suffix for backup files\n"\
++	"\t-s\tSilent operation; only print error messages\n"\
++	"\t-f\tRead the filenames to process from file (- = standard input)\n"\
++	"\t-t\tTouch original files after restore (update their mtimes)\n\n"\
++	"\t-L\tEnsure that when finished, the source file has a link count of 1\n\n", \
++	"$progname"
++}
++
++link_or_copy_file() {
++	from="$1"
++	to="$2"
++	if ! ln "$from" "$to" 2>/dev/null || [ -d "$to" ]; then
++		cp -dp --remove-destination "$from" "$to"
++	fi
++}
++
++ensure_nolinks() {
++	filename="$1"
++
++	link_count=$(stat -c '%h' "$filename")
++	if [ -z "$link_count" ] || [ "$link_count" -gt 1 ]; then
++		dirname=$(dirname "$filename")
++		basename=$(basename "$filename")
++		# Temp file name is "path/to/.file.XXXXXX"
++		tmpname=$(mktemp "${dirname}/.${basename}.XXXXXX")
++		cp -dp "$filename" "$tmpname"
++		mv "$tmpname" "$filename"
++	fi
++}
++
++process_file() {
++	file="$1"
++	backup="${OPT_PREFIX}${file}${OPT_SUFFIX}"
++
++	if [ "$OPT_WHAT" == "backup" ]; then
++		if [ -e "$backup" ]; then
++			rm "$backup"
++		else
++			mkdir -p "$(dirname "$backup")"
++		fi
++		if [ ! -e "$file" ]; then
++			$ECHO "New file $file"
++			touch "$backup"
++			chmod 000 "$backup"
++		else
++			$ECHO "Copying $file"
++			link_or_copy_file "$file" "$backup"
++			if [ -n "$OPT_NOLINKS" ]; then
++				ensure_nolinks "$file"
++			fi
++			if [ -n "OPT_TOUCH" ]; then
++				touch "$backup"
++			fi
++		fi
++	elif [ "$OPT_WHAT" == "restore" ]; then
++		mkdir -p "$(dirname "$file")"
++
++		if [ ! -e "$backup" ]; then
++			return 1
++		fi
++		if [ ! -s "$backup" ]; then
++			if [ -e "$file" ]; then
++				rm "$file"
++			fi
++			$ECHO "Removing $file"
++			rm "$backup"
++			while [ -d "${backup%/*}" ] && ! [ -L "${backup%/*}" ]
++			do
++				backup="${backup%/*}"
++				rmdir --ignore-fail-on-non-empty "$backup" 2>/dev/null
++				if [ -d "$backup" ]; then
++					break
++				fi
++			done
++		else
++			$ECHO "Restoring $file"
++			if [ -e "$file" ]; then
++				rm "$file"
++			fi
++			link_or_copy_file "$backup" "$file"
++			rm "$backup"
++			while [ -d "${backup%/*}" ] && ! [ -L "${backup%/*}" ]
++			do
++				backup="${backup%/*}"
++				rmdir --ignore-fail-on-non-empty "$backup" 2>/dev/null
++				if [ -d "$backup" ]; then
++					break
++				fi
++			done
++			if [ -n "$OPT_NOLINKS" ]; then
++				ensure_nolinks "$file"
++			fi
++			if [ -n "$OPT_TOUCH" ]; then
++				touch "$file"
++			fi
++		fi
++	elif [ "$OPT_WHAT" == "remove" ]; then
++		if [ -e "$backup" ]; then
++			rm "$backup"
++		fi
++		while [ -d "${backup%/*}" ] && ! [ -L "${backup%/*}" ]
++		do
++			backup="${backup%/*}"
++			rmdir --ignore-fail-on-non-empty "$backup" 2>/dev/null
++			if [ -d "$backup" ]; then
++				break
++			fi
++		done
++	elif [ "$OPT_WHAT" == "noop" ]; then
++		if [ -e "$file" ] && [ -n "$OPT_NOLINKS" ]; then
++			ensure_nolinks "$file"
++		fi
++	else
++		return 1
++	fi
++}
++
++walk() {
++	path="$1"
++	if [ ! -f "$path" ]; then
++		return 0
++	fi
++
++	if [ "${path#$OPT_PREFIX}" == "$path" ]
++	then
++		# prefix does not match
++		return 0
++	fi
++	path="${path#$OPT_PREFIX}"
++
++	if [ -n "$OPT_SUFFIX" ] && [ "${path%$OPT_SUFFIX}" == "$path" ]
++	then
++		# suffix does not match
++		return 0
++	fi
++	path="${path%$OPT_SUFFIX}"
++
++	process_file "$path"
++}
++
++
++ECHO=echo
++declare -a FILELIST
++progname="$0"
++while [ $# -gt 0 ]; do
++	case $1 in
++	-b)	OPT_WHAT=backup
++		;;
++	-r)	OPT_WHAT=restore
++		;;
++	-x)	OPT_WHAT=remove
++		;;
++	-B)	OPT_PREFIX=$2
++		shift
++		;;
++	-f)	OPT_FILE=$2
++		shift
++		;;
++	-z)	OPT_SUFFIX=$2
++		shift
++		;;
++	-s)	ECHO=:
++		;;
++	-L)	OPT_NOLINKS=1
++		;;
++	-t)	OPT_TOUCH=1
++		;;
++	-?*)	usage "$progname"
++		exit 0
++		;;
++	*)	FILELIST=($1)
++		;;
++	esac
++
++        shift
++done
++
++if [ -z "${OPT_PREFIX}${OPT_SUFFIX}" ]; then
++	usage "$progname"
++	exit 1
++fi
++if [ ${#FILELIST[@]} == 0 ] && [ -z "$OPT_FILE" ]; then
++	usage "$progname"
++	exit 1
++fi
++
++if [ -n "$OPT_FILE" ]; then
++	cat "$OPT_FILE" \
++	| while read nextfile; do
++		process_file "$nextfile"
++	done
++fi
++
++I=0
++while [ $I -lt ${#FILELIST[@]} ]; do
++
++	case "${FILELIST[$I]}" in
++	-)
++		path="${OPT_PREFIX%/*}"
++		if ! [ -n "$path" ] && [ -d "$path" ] ; then
++			I=$(($I+1))
++			continue
++		fi
++
++		find "$path" -mindepth 1 \( -type f -o -type d \) -print 2>/dev/null \
++		| while read
++		do
++			if [ -d "$REPLY" ]
++			then
++				if ! [ -r "$REPLY" ] || ! [ -x "$REPLY" ]
++				then
++					echo "$REPLY: Permission denied"
++					exit 1
++				fi
++			else
++				walk "$REPLY"
++			fi
++		done
++		if [ $? != 0 ]; then
++			exit 1
++		fi
++		;;
++	*)
++		process_file "${FILELIST[$I]}"
++		;;
++	esac
++		
++	I=$(($I+1))
++done
+Index: quilt/bin/quilt.in
+===================================================================
+--- quilt.orig/bin/quilt.in
++++ quilt/bin/quilt.in
+@@ -9,8 +9,8 @@
+ export TEXTDOMAIN=quilt
+ export TEXTDOMAINDIR=@LOCALEDIR@
+ 
+-: ${QUILT_DIR=@QUILT_DIR@} ${QUILT_LIB=@QUILT_LIB@}
+-export QUILT_DIR QUILT_LIB
++: ${QUILT_DIR=@QUILT_DIR@}
++export QUILT_DIR
+ 
+ if [ -z "$QUILTRC" ]
+ then
+Index: quilt/lib/backup-files.c
+===================================================================
+--- quilt.orig/lib/backup-files.c
++++ /dev/null
+@@ -1,585 +0,0 @@
+-/*
+-  File: backup-files.c
+-
+-  Copyright (C) 2003, 2004, 2005, 2006
+-  Andreas Gruenbacher <agruen@suse.de>, SuSE Labs
+-
+-  This program is free software; you can redistribute it and/or
+-  modify it under the terms of the GNU Library General Public
+-  License as published by the Free Software Foundation; either
+-  version 2 of the License, or (at your option) any later version.
+-
+-  This program is distributed in the hope that it will be useful,
+-  but WITHOUT ANY WARRANTY; without even the implied warranty of
+-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+-  Library General Public License for more details.
+-
+-  You should have received a copy of the GNU Library General Public
+-  License along with this library; if not, write to the Free Software
+-  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+-*/
+-
+-/*
+- * Create backup files of a list of files similar to GNU patch. A path
+- * name prefix and suffix for the backup file can be specified with the
+- * -B and -z options.
+- */
+-
+-#define _GNU_SOURCE 1
+-
+-#ifdef HAVE_CONFIG_H
+-# include "config.h"
+-#endif
+-
+-#include <sys/types.h>
+-#include <sys/stat.h>
+-#include <utime.h>
+-#include <fcntl.h>
+-#include <unistd.h>
+-#include <stdio.h>
+-#include <stdlib.h>
+-#include <errno.h>
+-#include <string.h>
+-#include <dirent.h>
+-
+-#if !defined(HAVE_MKSTEMP) && defined(HAVE_MKTEMP)
+-# define mkstemp(x) creat(mktemp(x), 0600)
+-#endif
+-
+-#ifndef PATH_MAX
+-# define PATH_MAX 4096
+-#endif
+-
+-#ifdef __MINGW32__
+-#define mkdir(x,y) mkdir(x)
+-/* Symlinks are not supported */
+-#define lstat stat
+-static int link(const char *oldpath, const char *newpath)
+-{
+-	errno = ENOSYS;
+-	return -1;
+-}
+-#endif
+-
+-const char *progname;
+-
+-enum { what_noop, what_backup, what_restore, what_remove };
+-
+-const char *opt_prefix="", *opt_suffix="", *opt_file;
+-int opt_silent, opt_what=what_noop;
+-int opt_nolinks, opt_touch;
+-
+-#define LINE_LENGTH 1024
+-
+-
+-static void
+-usage(void)
+-{
+-	printf("Usage: %s [-B prefix] [-z suffix] [-f {file|-}] [-s] [-b|-r|-x] [-t] [-L] {file|-} ...\n"
+-	       "\n"
+-	       "\tCreate hard linked backup copies of a list of files\n"
+-	       "\tread from standard input.\n"
+-	       "\n"
+-	       "\t-b\tCreate backup\n"
+-	       "\t-r\tRestore the backup\n"
+-	       "\t-x\tRemove backup files and empty parent directories\n"
+-	       "\t-B\tPath name prefix for backup files\n"
+-	       "\t-z\tPath name suffix for backup files\n"
+-	       "\t-s\tSilent operation; only print error messages\n"
+-	       "\t-f\tRead the filenames to process from file (- = standard input)\n"
+-	       "\t-t\tTouch original files after restore (update their mtimes)\n\n"
+-	       "\t-L\tEnsure that when finished, the source file has a link count of 1\n\n",
+-	       progname);
+-}
+-
+-static void *
+-malloc_nofail(size_t size)
+-{
+-	void *p = malloc(size);
+-	if (!p) {
+-		perror(progname);
+-		exit(1);
+-	}
+-	return p;
+-}
+-
+-static void
+-create_parents(const char *filename)
+-{
+-	struct stat st;
+-	int rv = -1;
+-	char *fn = malloc_nofail(strlen(filename) + 1), *f;
+-
+-	strcpy(fn, filename);
+-
+-	f = strrchr(fn, '/');
+-	if (f == NULL)
+-		goto out;
+-	*f = '\0';
+-	if (stat(fn, &st) == 0)
+-		goto out;
+-	*f = '/';
+-
+-	f = strchr(fn, '/');
+-	while (f != NULL) {
+-		*f = '\0';
+-		if (!rv || (rv = stat(fn, &st)) != 0) {
+-			mkdir(fn, 0777);
+-		}
+-		*f = '/';
+-		f = strchr(f+1, '/');
+-	}
+-out:
+-	free(fn);
+-}
+-
+-static void
+-remove_parents(const char *filename)
+-{
+-	char *fn = malloc_nofail(strlen(filename) + 1), *f;
+-
+-	strcpy(fn, filename);
+-
+-	f = strrchr(fn, '/');
+-	if (f == NULL)
+-		goto out;
+-	do {
+-		*f = '\0';
+-		if (rmdir(fn) == -1)
+-			goto out;
+-	} while ((f = strrchr(fn, '/')) != NULL);
+-	rmdir(fn);
+-out:
+-	free(fn);
+-}
+-
+-static int
+-copy_fd(int from_fd, int to_fd)
+-{
+-	char buffer[16384];
+-	char *wbuf;
+-	ssize_t len, l;
+-
+-	for ( ;; ) {
+-		len = read(from_fd, buffer, sizeof(buffer));
+-		if (len == 0)
+-			return 0;
+-		if (len < 0) {
+-			if (errno == EINTR || errno == EAGAIN)
+-				continue;
+-			return 1;
+-		}
+-		for (wbuf = buffer; len != 0; ) {
+-			l = write(to_fd, wbuf, len);
+-			if (l < 0) {
+-				if (errno == EINTR || errno == EAGAIN)
+-					continue;
+-				return 1;
+-			}
+-			wbuf += l;
+-			len -= l;
+-		}
+-	}
+-}
+-
+-static int
+-copy_file(const char *from, const struct stat *st, const char *to)
+-{
+-	int from_fd, to_fd, error = 1;
+-
+-	if ((from_fd = open(from, O_RDONLY)) == -1) {
+-		perror(from);
+-		return 1;
+-	}
+-	unlink(to);  /* make sure we don't inherit this file's mode. */
+-	if ((to_fd = creat(to, st->st_mode)) < 0) {
+-		perror(to);
+-		close(from_fd);
+-		return 1;
+-	}
+-#if defined(HAVE_FCHMOD)
+-	(void) fchmod(to_fd, st->st_mode);
+-#elif defined(HAVE_CHMOD)
+-	(void) chmod(to, st->st_mode);
+-#endif
+-	if (copy_fd(from_fd, to_fd)) {
+-		fprintf(stderr, "%s -> %s: %s\n", from, to, strerror(errno));
+-		unlink(to);
+-		goto out;
+-	}
+-
+-	error = 0;
+-out:
+-	close(from_fd);
+-	close(to_fd);
+-
+-	return error;
+-}
+-
+-static int
+-link_or_copy_file(const char *from, const struct stat *st, const char *to)
+-{
+-	if (link(from, to) == 0)
+-		return 0;
+-	if (errno != EXDEV && errno != EPERM &&
+-	    errno != EMLINK && errno != ENOSYS) {
+-		fprintf(stderr, "Could not link file `%s' to `%s': %s\n",
+-		       from, to, strerror(errno));
+-		return 1;
+-	}
+-	return copy_file(from, st, to);
+-}
+-
+-static int
+-ensure_nolinks(const char *filename)
+-{
+-	struct stat st;
+-
+-	if (stat(filename, &st) != 0) {
+-		perror(filename);
+-		return 1;
+-	}
+-	if (st.st_nlink > 1) {
+-		char *tmpname = malloc(1 + strlen(filename) + 7 + 1), *c;
+-		int from_fd = -1, to_fd = -1;
+-		int error = 1;
+-
+-		if (!tmpname)
+-			goto fail;
+-		from_fd = open(filename, O_RDONLY);
+-		if (from_fd == -1)
+-			goto fail;
+-
+-		/* Temp file name is "path/to/.file.XXXXXX" */
+-		strcpy(tmpname, filename);
+-		strcat(tmpname, ".XXXXXX");
+-		c = strrchr(tmpname, '/');
+-		if (c == NULL)
+-			c = tmpname;
+-		else
+-			c++;
+-		memmove(c + 1, c, strlen(c) + 1);
+-		*c = '.';
+-
+-		to_fd = mkstemp(tmpname);
+-		if (to_fd == -1)
+-			goto fail;
+-		if (copy_fd(from_fd, to_fd))
+-			goto fail;
+-#if defined(HAVE_FCHMOD)
+-		(void) fchmod(to_fd, st.st_mode);
+-#elif defined(HAVE_CHMOD)
+-		(void) chmod(tmpname, st.st_mode);
+-#endif
+-		close(from_fd);
+-		from_fd = -1;
+-		close(to_fd);
+-		to_fd = -1;
+-		if (rename(tmpname, filename))
+-			goto fail;
+-
+-		error = 0;
+-	fail:
+-		if (error)
+-			perror(filename);
+-		if (from_fd != -1)
+-			close(from_fd);
+-		if (to_fd != -1)
+-			close(to_fd);
+-		free(tmpname);
+-		return error;
+-	} else
+-		return 0;
+-}
+-
+-static int
+-process_file(const char *file)
+-{
+-	char *backup = malloc_nofail(
+-		strlen(opt_prefix) + strlen(file) + strlen(opt_suffix) + 1);
+-
+-	sprintf(backup, "%s%s%s", opt_prefix, file, opt_suffix);
+-
+-	if (opt_what == what_backup) {
+-		struct stat st;
+-		int missing_file = (stat(file, &st) == -1 && errno == ENOENT);
+-
+-		unlink(backup);
+-		create_parents(backup);
+-		if (missing_file) {
+-			int fd;
+-
+-			if (!opt_silent)
+-				printf("New file %s\n", file);
+-			/* GNU patch creates new files with mode==0. */
+-			if ((fd = creat(backup, 0)) == -1) {
+-				perror(backup);
+-				goto fail;
+-			}
+-			close(fd);
+-		} else {
+-			if (!opt_silent)
+-				printf("Copying %s\n", file);
+-			if (link_or_copy_file(file, &st, backup))
+-				goto fail;
+-			if (opt_nolinks) {
+-				if (ensure_nolinks(file))
+-					goto fail;
+-			}
+-			if (opt_touch)
+-				(void) utime(backup, NULL);
+-			else {
+-				struct utimbuf ut;
+-				ut.actime = ut.modtime = st.st_mtime;
+-				(void) utime(backup, &ut);
+-			}
+-		}
+-	} else if (opt_what == what_restore) {
+-		struct stat st;
+-
+-		create_parents(file);
+-		if (stat(backup, &st) != 0) {
+-			perror(backup);
+-			goto fail;
+-		}
+-		if (st.st_size == 0) {
+-			if (unlink(file) == 0 || errno == ENOENT) {
+-				if (!opt_silent)
+-					printf("Removing %s\n", file);
+-			} else {
+-				perror(file);
+-				goto fail;
+-			}
+-			unlink(backup);
+-			remove_parents(backup);
+-		} else {
+-			if (!opt_silent)
+-				printf("Restoring %s\n", file);
+-			unlink(file);
+-			if (link_or_copy_file(backup, &st, file))
+-				goto fail;
+-			unlink(backup);
+-			remove_parents(backup);
+-			if (opt_nolinks) {
+-				if (ensure_nolinks(file))
+-					goto fail;
+-			}
+-			if (opt_touch)
+-				(void) utime(file, NULL);
+-			else {
+-				struct utimbuf ut;
+-				ut.actime = ut.modtime = st.st_mtime;
+-				(void) utime(file, &ut);
+-			}
+-		}
+-	} else if (opt_what == what_remove) {
+-		unlink(backup);
+-		remove_parents(backup);
+-	} else if (opt_what == what_noop) {
+-		struct stat st;
+-		int missing_file = (stat(file, &st) == -1 && errno == ENOENT);
+-
+-		if (!missing_file && opt_nolinks) {
+-			if (ensure_nolinks(file))
+-				goto fail;
+-		}
+-	} else
+-		goto fail;
+-
+-	free(backup);
+-	return 0;
+-
+-fail:
+-	free(backup);
+-	return 1;
+-}
+-
+-static int
+-foreachdir_rec(const char *path, struct stat *st,
+-	       int (*walk)(const char *, const struct stat *))
+-{
+-	DIR *dir;
+-	struct dirent *dp;
+-	int failed = 0;
+-	char *p = malloc_nofail(PATH_MAX);
+-
+-	if (access(path, R_OK|X_OK) || !(dir = opendir(path)))
+-		return walk(path, NULL);
+-	while ((dp = readdir(dir))) {
+-		if (!strcmp(dp->d_name, ".") || !strcmp(dp->d_name, ".."))
+-			continue;
+-		if (strlen(path) + 1 + strlen(dp->d_name) + 1 > PATH_MAX) {
+-			fprintf(stderr, "%s/%s: name too long\n", path,
+-				dp->d_name);
+-			failed = -1;
+-			goto out;
+-		}
+-		sprintf(p, "%s/%s", path, dp->d_name);
+-		
+-		if (lstat(p, st))
+-			continue;  /* file has disappeared meanwhile */
+-		if (S_ISDIR(st->st_mode)) {
+-			failed = foreachdir_rec(p, st, walk);
+-			if (failed)
+-				goto out;
+-		} else {
+-			failed = walk(p, st);
+-			if (failed)
+-				goto out;
+-		}
+-	}
+-	if (closedir(dir) != 0)
+-		failed = -1;
+-
+-out:
+-	free(p);
+-	return failed;
+-}
+-
+-static int
+-foreachdir(const char *path,
+-	   int (*walk)(const char *, const struct stat *))
+-{
+-	struct stat st;
+-
+-	if (lstat(path, &st))
+-		return walk(path, NULL);
+-	return foreachdir_rec(path, &st, walk);
+-}
+-
+-static int
+-walk(const char *path, const struct stat *st)
+-{
+-	size_t prefix_len=strlen(opt_prefix), suffix_len=strlen(opt_suffix);
+-	size_t len = strlen(path);
+-	char *p;
+-	int ret;
+-
+-	if (!st) {
+-		perror(path);
+-		return 1;
+-	}
+-	if (!S_ISREG(st->st_mode))
+-		return 0;
+-	if (strncmp(opt_prefix, path, prefix_len))
+-		return 0;  /* prefix does not match */
+-	if (len < suffix_len || strcmp(opt_suffix, path + len - suffix_len))
+-		return 0;  /* suffix does not match */
+-
+-	p = malloc_nofail(len - prefix_len - suffix_len + 1);
+-	memcpy(p, path + prefix_len, len - prefix_len - suffix_len);
+-	p[len - prefix_len - suffix_len] = '\0';
+-	ret = process_file(p);
+-	free(p);
+-	return ret;
+-}
+-
+-int
+-main(int argc, char *argv[])
+-{
+-	int opt, status = 0;
+-
+-	progname = argv[0];
+-
+-	while ((opt = getopt(argc, argv, "brxB:z:f:shLt")) != -1) {
+-		switch(opt) {
+-			case 'b':
+-				opt_what = what_backup;
+-				break;
+-
+-			case 'r':
+-				opt_what = what_restore;
+-				break;
+-
+-			case 'x':
+-				opt_what = what_remove;
+-				break;
+-
+-			case 'B':
+-				opt_prefix = optarg;
+-				break;
+-
+-			case 'f':
+-				opt_file = optarg;
+-				break;
+-
+-			case 'z':
+-				opt_suffix = optarg;
+-				break;
+-
+-			case 's':
+-				opt_silent = 1;
+-				break;
+-
+-			case 'L':
+-				opt_nolinks = 1;
+-				break;
+-
+-			case 't':
+-				opt_touch = 1;
+-				break;
+-
+-			case 'h':
+-			default:
+-				usage();
+-				return 0;
+-		}
+-	}
+-
+-	if ((*opt_prefix == '\0' && *opt_suffix == '\0') ||
+-	    (opt_file == NULL && optind == argc)) {
+-		usage();
+-		return 1;
+-	}
+-
+-	if (opt_file != NULL) {
+-		FILE *file;
+-		char line[LINE_LENGTH];
+-
+-		if (!strcmp(opt_file, "-")) {
+-			file = stdin;
+-		} else {
+-			if ((file = fopen(opt_file, "r")) == NULL) {
+-				perror(opt_file);
+-				return 1;
+-			}
+-		}
+-
+-		while (fgets(line, sizeof(line), file)) {
+-			char *l = strchr(line, '\0');
+-
+-			if (l > line && *(l-1) == '\n')
+-				*(l-1) = '\0';
+-			if (*line == '\0')
+-				continue;
+-
+-			if ((status = process_file(line)) != 0)
+-				return status;
+-		}
+-
+-		if (file != stdin) {
+-			fclose(file);
+-		}
+-	}
+-	for (; optind < argc; optind++) {
+-		if (strcmp(argv[optind], "-") == 0) {
+-			struct stat st;
+-			char *dir = strdup(opt_prefix), *d = strrchr(dir, '/');
+-			if (d)
+-				*d = '\0';
+-			else
+-				d = ".";
+-			if (stat(dir, &st) == 0) {
+-				status = foreachdir(dir, walk);
+-				if (status == -1)
+-					perror(dir);
+-			}
+-			free(dir);
+-		} else
+-			status = process_file(argv[optind]);
+-		if (status)
+-			return status;
+-	}
+-
+-	return status;
+-}
--- quilt-0.46.orig/debian/patches/mailname
+++ quilt-0.46/debian/patches/mailname
@@ -0,0 +1,32 @@
+  * Let /etc/mailname override the hostname in the mail command
+    (Closes: #356348)
+
+Upstream status: Submitted 060427
+
+---
+ quilt/mail.in |   12 +++++++++++-
+ 1 file changed, 11 insertions(+), 1 deletion(-)
+
+Index: quilt/quilt/mail.in
+===================================================================
+--- quilt.orig/quilt/mail.in
++++ quilt/quilt/mail.in
+@@ -154,7 +154,17 @@
+ fi
+ 
+ if [ -z "$opt_sender" ]; then
+-	hostname=$(hostname -f 2>/dev/null)
++	hostname=nowhere
++	if [ -e /etc/mailname ] ; 
++	then
++		hostname=`cat /etc/mailname`
++	fi
++	
++	if [ "$hostname" = "${hostname/.}" ]
++	then
++		hostname=$(hostname -f 2>/dev/null)
++	fi
++	
+ 	if [ "$hostname" = "${hostname/.}" ]
+ 	then
+ 		hostname=$(hostname)
--- quilt-0.46.orig/debian/patches/arch_all.other
+++ quilt-0.46/debian/patches/arch_all.other
@@ -0,0 +1,462 @@
+---
+ Makefile.in                   |   31 ----
+ quilt/add.in                  |    2 
+ quilt/pop.in                  |    4 
+ quilt/push.in                 |    2 
+ quilt/remove.in               |    2 
+ quilt/scripts/backup-files.in |  269 ++++++++++++++++++++++++++++++++++++++++++
+ quilt/snapshot.in             |    2 
+ 7 files changed, 281 insertions(+), 31 deletions(-)
+
+--- quilt-0.45.orig/Makefile.in
++++ quilt-0.45/Makefile.in
+@@ -6,7 +6,6 @@
+ prefix :=	@prefix@
+ exec_prefix :=	@exec_prefix@
+ bindir :=	@bindir@
+-libdir :=	@libdir@
+ datadir :=	@datadir@
+ docdir :=	@docdir@
+ mandir :=	$(datadir)/man
+@@ -49,11 +48,6 @@
+ LIBS :=		@LIBS@
+ EXEEXT :=	@EXEEXT@
+ 
+-LIBOBJS :=	$(filter $(patsubst lib/%.c,lib/%.o,$(wildcard lib/*.c)), $(patsubst %,lib/%,@LIBOBJS@))
+-ifneq ($(LIBOBJS),)
+-CFLAGS += -Ilib
+-endif
+-
+ COMPAT_SYMLINKS	:= @COMPAT_SYMLINKS@
+ COMPAT_PROGRAMS	:= @COMPAT_PROGRAMS@
+ 
+@@ -81,7 +75,7 @@
+ DIRT +=		$(QUILT_IN:%=quilt/%)
+ 
+ SCRIPTS_IN :=	patchfns parse-patch inspect dependency-graph edmail	\
+-		remove-trailing-ws
++		remove-trailing-ws backup-files
+ 
+ SCRIPTS_SRC :=	$(SCRIPTS_IN:%=%.in)
+ SCRIPTS :=	$(SCRIPTS_IN)
+@@ -92,11 +86,6 @@
+ SRC +=		$(wildcard compat/*.in) $(wildcard compat/*.sh)
+ DIRT +=		$(patsubst %.in,%,$(wildcard compat/*.in)) $(COMPAT_SYMLINKS:%=compat/%)
+ 
+-LIB_SRC :=	backup-files.c
+-LIB :=		backup-files$(EXEEXT)
+-SRC +=		$(LIB_SRC:%=lib/%)
+-DIRT +=		lib/backup-files$(EXEEXT) $(LIB_SRC:%.c=lib/%.o)
+-
+ DOC_IN :=	README
+ DOC_SRC :=	$(DOC_IN:%=doc/%.in)
+ DOC :=		$(DOC_IN)
+@@ -126,16 +115,13 @@
+ # Settings for running the uninstalled version of quilt in the source tree:
+ PATH :=		$(CURDIR)/bin:$(CURDIR)/compat:$(PATH)
+ QUILT_DIR :=	$(CURDIR)/quilt
+-QUILT_LIB :=	$(CURDIR)/lib
+ QUILTRC :=	$(CURDIR)/test/test.quiltrc
+-export QUILT_DIR QUILT_LIB QUILTRC
++export QUILT_DIR QUILTRC
+ 
+ #-----------------------------------------------------------------------
+ 
+ all : configure scripts compat $(DOC:%=doc/%) $(MAN1) mofiles
+ 
+-$(LIB:%=lib/%) :: $(LIBOBJS)
+-
+ ifeq ($(USE_NLS),yes)
+ mofiles : $(LINGUAS:%=po/%.mo)
+ else
+@@ -149,7 +135,7 @@
+ 	$(MSGMERGE) -o $@ $@ $^
+ 
+ scripts : $(BIN:%=bin/%) $(QUILT:%=quilt/%) 				\
+-	  $(SCRIPTS:%=quilt/scripts/%) $(LIB:%=lib/%)			\
++	  $(SCRIPTS:%=quilt/scripts/%) 					\
+ 	  $(if $(PATCH_WRAPPER),bin/patch-wrapper)
+ 
+ dist : clean $(PACKAGE)-$(VERSION).tar.gz
+@@ -248,8 +234,7 @@
+ $(patsubst %.in,%,$(wildcard bin/*.in quilt/*.in quilt/scripts/*.in)) :: Makefile
+ % :: %.in
+ 	@echo "$< -> $@" >&2
+-	@$(SED) -e 's:@QUILT_LIB''@:$(libdir)/$(PACKAGE):g'		\
+-		-e 's:@QUILT_DIR''@:$(datadir)/$(PACKAGE):g'		\
++	@$(SED) -e 's:@QUILT_DIR''@:$(datadir)/$(PACKAGE):g'		\
+ 		-e 's:@PERL''@:$(PERL):g'				\
+ 		-e 's:@BASH''@:$(BASH):g'				\
+ 		-e 's:@PATCH''@:$(PATCH):g'				\
+@@ -260,7 +245,7 @@
+ 		$< > $@
+ 	@$(if $(filter-out $<,$(NON_EXEC_IN)),chmod +x $@)
+ 
+-lib/backup-files.o :: Makefile
++#lib/backup-files.o :: Makefile
+ 
+ configure : configure.ac aclocal.m4
+ 	autoconf
+@@ -312,9 +297,6 @@
+ 		   $(BUILD_ROOT)$(datadir)/$(PACKAGE)/wrapper/patch
+ endif
+ 	
+-	$(INSTALL) -d $(BUILD_ROOT)$(libdir)/$(PACKAGE)
+-	$(INSTALL) -m 755 $(LIB:%=lib/%) $(BUILD_ROOT)$(libdir)/$(PACKAGE)/
+-
+ 	$(INSTALL) -d $(BUILD_ROOT)$(docdir)/$(PACKAGE)-$(VERSION)/
+ 	$(INSTALL) -m 644 doc/README					\
+ 		   $(BUILD_ROOT)$(docdir)/$(PACKAGE)-$(VERSION)/
+@@ -349,7 +331,6 @@
+ 
+ uninstall ::
+ 	rm -rf $(BIN:%=$(BUILD_ROOT)$(bindir)/%)			\
+-	       $(BUILD_ROOT)$(libdir)/$(PACKAGE)			\
+ 	       $(BUILD_ROOT)$(datadir)/$(PACKAGE)			\
+ 	       $(patsubst %,$(BUILD_ROOT)$(mandir)/man1/%,		\
+ 		   $(notdir $(MAN1)))					\
+@@ -374,7 +355,7 @@
+ 
+ # Include a run-time generated list of dependencies for each test case
+ test/.depend : Makefile $(TESTS)
+-	@(  printf "%s : bin/quilt quilt/scripts/patchfns $(LIB:%=lib/%) $(COMPAT)\n" $(TESTS); \
++	@(  printf "%s : bin/quilt quilt/scripts/patchfns $(COMPAT)\n" $(TESTS); \
+ 	    $(AWK) 'sub(/.*\$$ *quilt /, "")				\
+ 			{ print FILENAME, ":", "quilt/"$$1}' $(TESTS); \
+ 	    $(AWK) 'sub(/.*\<quilt_command /, "") && ($$1 !~ /[^a-z]/)	\
+--- quilt-0.45.orig/quilt/add.in
++++ quilt-0.45/quilt/add.in
+@@ -121,7 +121,7 @@
+ 		continue
+ 	fi
+ 
+-	if ! $QUILT_LIB/backup-files -b -s -L -B $QUILT_PC/$patch/ $SUBDIR$file
++	if ! $QUILT_DIR/scripts/backup-files -b -s -L -B $QUILT_PC/$patch/ $SUBDIR$file
+ 	then
+ 		printf $"Failed to back up file %s\n" "$SUBDIR$file" >&2
+ 		status=1
+--- quilt-0.45.orig/quilt/pop.in
++++ quilt-0.45/quilt/pop.in
+@@ -167,7 +167,7 @@
+ 			status=0
+ 		else
+ 			printf $"Removing patch %s\n" "$(print_patch $patch)"
+-			$QUILT_LIB/backup-files $silent -r -t -B $QUILT_PC/$patch/ -
++			$QUILT_DIR/scripts/backup-files $silent -r -t -B $QUILT_PC/$patch/ -
+ 			status=$?
+ 		fi
+ 		remove_from_db $patch
+@@ -269,7 +269,7 @@
+ 	# of one: This will automatically be the case in the usual
+ 	# situations, but we don't want to risk file corruption in weird
+ 	# corner cases such as files added to a patch but not modified.
+-	$QUILT_LIB/backup-files -L -s -B $QUILT_PC/$patch/ -
++	$QUILT_DIR/scripts/backup-files -L -s -B $QUILT_PC/$patch/ -
+ 	printf $"Now at patch %s\n" "$(print_patch $patch)"
+ fi
+ ### Local Variables:
+--- quilt-0.45.orig/quilt/push.in
++++ quilt-0.45/quilt/push.in
+@@ -139,7 +139,7 @@
+ {
+ 	local patch=$1
+ 
+-	$QUILT_LIB/backup-files $silent_unless_verbose -r -B $QUILT_PC/$patch/ -
++	$QUILT_DIR/scripts/backup-files $silent_unless_verbose -r -B $QUILT_PC/$patch/ -
+ }
+ 
+ cleanup_patch_output() {
+--- quilt-0.45.orig/quilt/remove.in
++++ quilt-0.45/quilt/remove.in
+@@ -86,7 +86,7 @@
+ 	fi
+ 
+ 	# Restore file from backup
+-	if ! $QUILT_LIB/backup-files -r -t -s -B $QUILT_PC/$patch/ $SUBDIR$file
++	if ! $QUILT_DIR/scripts/backup-files -r -t -s -B $QUILT_PC/$patch/ $SUBDIR$file
+ 	then
+ 		printf $"Failed to remove file %s from patch %s\n" \
+ 		       "$SUBDIR$file" "$(print_patch $patch)" >&2
+--- /dev/null
++++ quilt-0.45/quilt/scripts/backup-files.in
+@@ -0,0 +1,269 @@
++#! @BASH@
++
++set -e
++
++# File: backup-files.sh
++
++# Copyright (C) 2006 Steve Langasek <vorlon@debian.org>
++# portions Copyright (C) 2003, 2004, 2005, 2006 Andreas Gruenbacher
++# <agruen@suse.de>, SuSE Labs
++
++# This program is free software; you can redistribute it and/or modify
++# it under the terms of the GNU General Public License as published by
++# the Free Software Foundation; version 2 dated June, 1991.
++
++# This program is distributed in the hope that it will be useful, but 
++# WITHOUT ANY WARRANTY; without even the implied warranty of
++# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
++# General Public License for more details.
++
++# You should have received a copy of the GNU General Public License 
++# along with this program;  if not, write to the Free Software
++# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
++# MA 02110-1301, USA.
++
++
++# Create backup files of a list of files similar to GNU patch. A path
++# name prefix and suffix for the backup file can be specified with the
++# -B and -z options.
++
++usage () {
++	progname="$1"
++	printf "Usage: %s [-B prefix] [-z suffix] [-f {file|-}] [-s] [-b|-r|-x] [-t] [-L] {file|-} ...\n"\
++	"\n"\
++	"\tCreate hard linked backup copies of a list of files\n"\
++	"\tread from standard input.\n"\
++	"\n"\
++	"\t-b\tCreate backup\n"\
++	"\t-r\tRestore the backup\n"\
++	"\t-x\tRemove backup files and empty parent directories\n"\
++	"\t-B\tPath name prefix for backup files\n"\
++	"\t-z\tPath name suffix for backup files\n"\
++	"\t-s\tSilent operation; only print error messages\n"\
++	"\t-f\tRead the filenames to process from file (- = standard input)\n"\
++	"\t-t\tTouch original files after restore (update their mtimes)\n\n"\
++	"\t-L\tEnsure that when finished, the source file has a link count of 1\n\n", \
++	"$progname"
++}
++
++link_or_copy_file() {
++	from="$1"
++	to="$2"
++	if ! ln "$from" "$to" || [ -d "$to" ]; then
++		cp -dp --remove-destination "$from" "$to"
++	fi
++}
++
++ensure_nolinks() {
++	filename="$1"
++
++	link_count=$(stat -c '%h' "$filename")
++	if [ -z "$link_count" ] || [ "$link_count" -gt 1 ]; then
++		dirname=$(dirname "$filename")
++		basename=$(basename "$filename")
++		# Temp file name is "path/to/.file.XXXXXX"
++		tmpname=$(mktemp "${dirname}/.${basename}.XXXXXX")
++		cp -dp "$filename" "$tmpname"
++		mv "$tmpname" "$filename"
++	fi
++}
++
++process_file() {
++	file="$1"
++	backup="${OPT_PREFIX}${file}${OPT_SUFFIX}"
++
++	if [ "$OPT_WHAT" == "backup" ]; then
++		if [ -e "$backup" ]; then
++			rm "$backup"
++		else
++			mkdir -p "$(dirname "$backup")"
++		fi
++		if [ ! -e "$file" ]; then
++			$ECHO "New file $file"
++			touch "$backup"
++			chmod 000 "$backup"
++		else
++			$ECHO "Copying $file"
++			link_or_copy_file "$file" "$backup"
++			if [ -n "$OPT_NOLINKS" ]; then
++				ensure_nolinks "$file"
++			fi
++			if [ -n "OPT_TOUCH" ]; then
++				touch "$backup"
++			fi
++		fi
++	elif [ "$OPT_WHAT" == "restore" ]; then
++		mkdir -p "$(dirname "$file")"
++
++		if [ ! -e "$backup" ]; then
++			return 1
++		fi
++		if [ ! -s "$backup" ]; then
++			if [ -e "$file" ]; then
++				rm "$file"
++			fi
++			$ECHO "Removing $file"
++			rm "$backup"
++			while [ -d "${backup%/*}" ] && ! [ -L "${backup%/*}" ]
++			do
++				backup="${backup%/*}"
++				rmdir --ignore-fail-on-non-empty "$backup" 2>/dev/null
++				if [ -d "$backup" ]; then
++					break
++				fi
++			done
++		else
++			$ECHO "Restoring $file"
++			if [ -e "$file" ]; then
++				rm "$file"
++			fi
++			link_or_copy_file "$backup" "$file"
++			rm "$backup"
++			while [ -d "${backup%/*}" ] && ! [ -L "${backup%/*}" ]
++			do
++				backup="${backup%/*}"
++				rmdir --ignore-fail-on-non-empty "$backup" 2>/dev/null
++				if [ -d "$backup" ]; then
++					break
++				fi
++			done
++			if [ -n "$OPT_NOLINKS" ]; then
++				ensure_nolinks "$file"
++			fi
++			if [ -n "$OPT_TOUCH" ]; then
++				touch "$file"
++			fi
++		fi
++	elif [ "$OPT_WHAT" == "remove" ]; then
++		if [ -e "$backup" ]; then
++			rm "$backup"
++		fi
++		while [ -d "${backup%/*}" ] && ! [ -L "${backup%/*}" ]
++		do
++			backup="${backup%/*}"
++			rmdir --ignore-fail-on-non-empty "$backup" 2>/dev/null
++			if [ -d "$backup" ]; then
++				break
++			fi
++		done
++	elif [ "$OPT_WHAT" == "noop" ]; then
++		if [ -e "$file" ] && [ -n "$OPT_NOLINKS" ]; then
++			ensure_nolinks "$file"
++		fi
++	else
++		return 1
++	fi
++}
++
++walk() {
++	path="$1"
++	if [ ! -f "$path" ]; then
++		return 0
++	fi
++
++	if [ "${path#$OPT_PREFIX}" == "$path" ]
++	then
++		# prefix does not match
++		return 0
++	fi
++	path="${path#$OPT_PREFIX}"
++
++	if [ -n "$OPT_SUFFIX" ] && [ "${path%$OPT_SUFFIX}" == "$path" ]
++	then
++		# suffix does not match
++		return 0
++	fi
++	path="${path%$OPT_SUFFIX}"
++
++	process_file "$path"
++}
++
++
++ECHO=echo
++declare -a FILELIST
++progname="$0"
++while [ $# -gt 0 ]; do
++	case $1 in
++	-b)	OPT_WHAT=backup
++		;;
++	-r)	OPT_WHAT=restore
++		;;
++	-x)	OPT_WHAT=remove
++		;;
++	-B)	OPT_PREFIX=$2
++		shift
++		;;
++	-f)	OPT_FILE=$2
++		shift
++		;;
++	-z)	OPT_SUFFIX=$2
++		shift
++		;;
++	-s)	ECHO=:
++		;;
++	-L)	OPT_NOLINKS=1
++		;;
++	-t)	OPT_TOUCH=1
++		;;
++	-?*)	usage "$progname"
++		exit 0
++		;;
++	*)	FILELIST=($1)
++		;;
++	esac
++
++        shift
++done
++
++if [ -z "${OPT_PREFIX}${OPT_SUFFIX}" ]; then
++	usage "$progname"
++	exit 1
++fi
++if [ ${#FILELIST[@]} == 0 ] && [ -z "$OPT_FILE" ]; then
++	usage "$progname"
++	exit 1
++fi
++
++if [ -n "$OPT_FILE" ]; then
++	cat "$OPT_FILE" \
++	| while read nextfile; do
++		process_file "$nextfile"
++	done
++fi
++
++I=0
++while [ $I -lt ${#FILELIST[@]} ]; do
++
++	case "${FILELIST[$I]}" in
++	-)
++		path="${OPT_PREFIX%/*}"
++		if ! [ -n "$path" ] && [ -d "$path" ] ; then
++			I=$(($I+1))
++			continue
++		fi
++
++		find "$path" -mindepth 1 \( -type f -o -type d \) -print 2>/dev/null \
++		| while read
++		do
++			if [ -d "$REPLY" ]
++			then
++				if ! [ -r "$REPLY" ] || ! [ -x "$REPLY" ]
++				then
++					echo "$REPLY: Permission denied"
++					exit 1
++				fi
++			else
++				walk "$REPLY"
++			fi
++		done
++		if [ $? != 0 ]; then
++			exit 1
++		fi
++		;;
++	*)
++		process_file "${FILELIST[$I]}"
++		;;
++	esac
++		
++	I=$(($I+1))
++done
+--- quilt-0.45.orig/quilt/snapshot.in
++++ quilt-0.45/quilt/snapshot.in
+@@ -85,7 +85,7 @@
+ 	}
+ 	{ print }
+ ' \
+-| $QUILT_LIB/backup-files -b -s -L -f - -B "$QUILT_PC/$snap_subdir/"
++| $QUILT_DIR/scripts/backup-files -b -s -L -f - -B "$QUILT_PC/$snap_subdir/"
+ 
+ ### Local Variables:
+ ### mode: shell-script
--- quilt-0.46.orig/debian/patches/mail-signature
+++ quilt-0.46/debian/patches/mail-signature
@@ -0,0 +1,88 @@
+From: Simon Horman <horms@verge.net.au>
+Date: Thu, 19 Apr 2007 17:39:07 +0900
+Subject: Add an option to quilt mail to allow the signature to be specified
+
+This seems like a useful enough feature without need for much explanation.
+But the real motivation for it is that the test suite will fails
+if a .signature file is present, as the output includes the contents
+of .signature whereas the expected output does not.
+
+I guess the test could be changed so as not to compare the signature
+portion, but as this seems like a nice enough feature anyway.
+
+A patch to update the relevant test to use this option follows.
+
+---
+ quilt/mail.in |   17 +++++++++++++----
+ 1 file changed, 13 insertions(+), 4 deletions(-)
+
+Index: quilt/quilt/mail.in
+===================================================================
+--- quilt.orig/quilt/mail.in
++++ quilt/quilt/mail.in
+@@ -21,7 +21,7 @@
+ 
+ usage()
+ {
+-	printf $"Usage: quilt mail {--mbox file|--send} [-m text] [--prefix prefix] [--sender ...] [--from ...] [--to ...] [--cc ...] [--bcc ...] [--subject ...]\n"
++	printf $"Usage: quilt mail {--mbox file|--send} [-m text] [--prefix prefix] [--sender ...] [--from ...] [--to ...] [--cc ...] [--bcc ...] [--subject ...] [--signature file]\n"
+ 	if [ x$1 = x-h ]
+ 	then
+ 		printf $"
+@@ -55,6 +55,11 @@
+ 
+ --to, --cc, --bcc
+ 	Append a recipient to the To, Cc, or Bcc header.
++
++--signature file
++
++	Append  the specified signature file if it exists.
++	Default is ~/.signature
+ " "@DOCSUBDIR@/README.MAIL"
+ 		exit 0
+ 	else
+@@ -94,7 +99,7 @@
+ 
+ options=`getopt -o m:h --long from:,to:,cc:,bcc:,subject: \
+ 		       --long send,mbox:,charset:,sender: \
+-		       --long prefix: -- "$@"`
++		       --long prefix: --long signature: -- "$@"`
+ 
+ if [ $? -ne 0 ]
+ then
+@@ -104,6 +109,7 @@
+ eval set -- "$options"
+ 
+ opt_prefix=patch
++opt_signature="$HOME/.signature"
+ while true
+ do
+ 	case "$1" in
+@@ -137,6 +143,9 @@
+ 	--mbox)
+ 		opt_mbox=$2
+ 		shift 2 ;;
++	--signature)
++		opt_signature=$2
++		shift 2 ;;
+ 	--charset)
+ 		opt_charset=$2
+ 		shift 2 ;;
+@@ -359,7 +368,7 @@
+ 		echo
+ 	fi
+ 	echo "-- "
+-	[ -r $HOME/.signature ] && cat $HOME/.signature
++	[ -r "$opt_signature" ] && cat "$opt_signature"
+ ) | $QUILT_DIR/scripts/edmail --charset $opt_charset > $introduction
+ 
+ if [ -z "$opt_message" ]
+@@ -458,7 +467,7 @@
+ 		in_body	{ print }
+ 		' $body
+ 		echo -e '\n-- '
+-		[ -r $HOME/.signature ] && cat $HOME/.signature
++		[ -r "$opt_signature" ] && cat "$opt_signature"
+ 	) | eval $QUILT_DIR/scripts/edmail --charset $opt_charset \
+ 		--replace-header Date="\"$new_date\"" \
+ 		To Cc Bcc \
--- quilt-0.46.orig/debian/patches/create_db_on_snapshot
+++ quilt-0.46/debian/patches/create_db_on_snapshot
@@ -0,0 +1,16 @@
+---
+ quilt/snapshot.in |    1 +
+ 1 file changed, 1 insertion(+)
+
+Index: quilt/quilt/snapshot.in
+===================================================================
+--- quilt.orig/quilt/snapshot.in
++++ quilt/quilt/snapshot.in
+@@ -74,6 +74,7 @@
+ fi
+ 
+ # Save current working state
++create_db
+ mkdir -p $QUILT_PC/$snap_subdir
+ for patch in $(applied_patches); do
+ 	files_in_patch $patch
--- quilt-0.46.orig/debian/patches/test_broken_patches
+++ quilt-0.46/debian/patches/test_broken_patches
@@ -0,0 +1,51 @@
+---
+ test/file-not-found.test |   42 ++++++++++++++++++++++++++++++++++++++++++
+ 1 file changed, 42 insertions(+)
+
+Index: quilt/test/file-not-found.test
+===================================================================
+--- /dev/null
++++ quilt/test/file-not-found.test
+@@ -0,0 +1,42 @@
++# Try to push a patch touching a file which does not exist in this tree
++
++$ rm -rf d
++$ mkdir -p d/patches
++$ cd d
++
++$ mkdir subdir
++$ echo foo > subdir/file.txt
++$ echo bar > subdir/other.txt
++$ diff -u subdir/file.txt subdir/other.txt > patches/patch
++# simulate --no-timestamp
++$ sed 's|subdir/file.txt.*|subdir/file.txt|' patches/patch > patches/patch2
++$ sed 's|subdir/other.txt.*|subdir/other.txt|' patches/patch2 > patches/patch
++$ rm subdir/other.txt patches/patch2
++$ echo patch > patches/series
++
++$ quilt push
++> Applying patch patches/patch
++> can't find file to patch at input line 3
++> Perhaps you used the wrong -p or --strip option?
++> The text leading up to this was:
++> --------------------------
++> |--- subdir/file.txt
++> |+++ subdir/other.txt
++> --------------------------
++> No file to patch.  Skipping patch.
++> 1 out of 1 hunk ignored
++> Patch patches/patch does not apply (enforce with -f)
++
++$ quilt push -qf
++> Applying patch patches/patch
++> The text leading up to this was:
++> --------------------------
++> |--- subdir/file.txt
++> |+++ subdir/other.txt
++> --------------------------
++> No file to patch.  Skipping patch.
++> 1 out of 1 hunk ignored
++> Patch patches/patch appears to be empty; applied
++
++$ cd ..
++$ rm -rf d
--- quilt-0.46.orig/debian/patches/unset_posix_strict_conformance_variables
+++ quilt-0.46/debian/patches/unset_posix_strict_conformance_variables
@@ -0,0 +1,32 @@
+From: "brian m. carlson" <sandals@crustytoothpaste.ath.cx>
+Subject: quilt: breaks when POSIXLY_CORRECT=1
+Date: Fri, 25 Jan 2008 20:02:28 +0000
+Closes: #462578
+
+quilt breaks when POSIXLY_CORRECT is set to 1, because it invokes
+patch, and patch does not work non-interactively in POSIX mode.  (I
+believe this is the mandated behavior, unfortunate as it is.) If you
+want to rely on non-POSIX semantics of patch, you should unset
+POSIXLY_CORRECT (and probably _POSIX2_VERSION and POSIXLY_PEDANTIC as
+well).
+
+
+---
+ bin/quilt.in |    4 ++++
+ 1 file changed, 4 insertions(+)
+
+Index: quilt/bin/quilt.in
+===================================================================
+--- quilt.orig/bin/quilt.in	2008-06-06 17:10:43.000000000 +0200
++++ quilt/bin/quilt.in	2008-06-06 17:11:39.000000000 +0200
+@@ -6,6 +6,10 @@
+ #
+ #  See the COPYING and AUTHORS files for more details.
+ 
++# unset posix strict conformance variables since patch cannot be run
++# non-interactively when they are set (doh!).
++unset POSIXLY_CORRECT _POSIX2_VERSION POSIXLY_PEDANTIC
++
+ export TEXTDOMAIN=quilt
+ export TEXTDOMAINDIR=@LOCALEDIR@
+ 
--- quilt-0.46.orig/debian/patches/generic-awk
+++ quilt-0.46/debian/patches/generic-awk
@@ -0,0 +1,32 @@
+Debian bug #431926
+Package: quilt
+Severity: minor
+
+
+The quilt test-suite fails when using mawk or original-awk instead of
+gawk. After applying this patch, all run fine. It just drops a check
+for a word boundary, which is a gawk-extension. I think it is safe to
+use it, as there is very similar code in mail.in which does neither use
+word-boundary checks. I suggest applying this patch and replacing the
+gawk-dependency with a general awk-dependency.
+
+---
+ quilt/mail.in |    4 ++--
+ 1 file changed, 2 insertions(+), 2 deletions(-)
+
+Index: quilt/quilt/mail.in
+===================================================================
+--- quilt.orig/quilt/mail.in
++++ quilt/quilt/mail.in
+@@ -223,9 +223,9 @@
+ 		if [ ${#mh[@]} -eq 0 ]
+ 		then
+ 			local desc=$(echo $(echo "$header" | awk '
+-				/^EDESC\>/	{ desc = 0 }
++				/^EDESC/	{ desc = 0 }
+ 				desc		{ print }
+-				/^DESC\>/	{ desc = 1 }
++				/^DESC/		{ desc = 1 }
+ 				'))
+ 			if [ -n "$desc" ]
+ 			then
--- quilt-0.46.orig/debian/patches/mail-from-locale
+++ quilt-0.46/debian/patches/mail-from-locale
@@ -0,0 +1,43 @@
+From: Simon Horman <horms@verge.net.au>
+Date: Thu, 19 Apr 2007 17:39:07 +0900
+Subject: Force locale to C when generating date for From header
+
+Without this the From header will end up with a date according
+to the pervailing locale, which I believe results in an invalid
+mbox - muttng doesn't like it anyway.
+
+Tested with the following environment:
+
+# LANG=ja_JP.utf8
+LANGUAGE=ja_JP.utf8
+LC_CTYPE="ja_JP.utf8"
+LC_NUMERIC="ja_JP.utf8"
+LC_TIME="ja_JP.utf8"
+LC_COLLATE="ja_JP.utf8"
+LC_MONETARY="ja_JP.utf8"
+LC_MESSAGES="ja_JP.utf8"
+LC_PAPER="ja_JP.utf8"
+LC_NAME="ja_JP.utf8"
+LC_ADDRESS="ja_JP.utf8"
+LC_TELEPHONE="ja_JP.utf8"
+LC_MEASUREMENT="ja_JP.utf8"
+LC_IDENTIFICATION="ja_JP.utf8"
+LC_ALL=ja_JP.utf8
+
+---
+ quilt/mail.in |    2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+Index: quilt/quilt/mail.in
+===================================================================
+--- quilt.orig/quilt/mail.in
++++ quilt/quilt/mail.in
+@@ -89,7 +89,7 @@
+ 				 --remove-header Bcc "$@" < $tmpfile \
+ 		| sendmail ${QUILT_SENDMAIL_ARGS--f "$opt_sender"} "$@"
+ 	else
+-		local from_date=$(date "+%a %b %e %H:%M:%S %Y")
++		local from_date=$(LC_ALL=C date "+%a %b %e %H:%M:%S %Y")
+ 		echo "From $opt_sender $from_date"
+ 		sed -e 's/^From />From /' $tmpfile
+ 		echo
